---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper1
  labels:
    app.kubernetes.io/name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  serviceName: "zoo"
  template:
    metadata:
      labels:
        app: zookeeper
        server: zookeeper1
    spec:
      terminationGracePeriodSeconds: 10
      securityContext:
        fsGroup: 1000
      containers:
      - name: zookeeper1-con
        image: smoonemans/kafka-docker:0.0.0
        imagePullPolicy: IfNotPresent
# Comment out following for testing on local laptop
#        volumeMounts:
#        - name: zookeeper-data-1
#          mountPath: "/data" 
#        - name: zookeeper-datalog-1
#          mountPath: "/datalog" 
# End of Comment out following for testing on local laptop
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: peer
        - containerPort: 3888
          name: leader-election
        env:
# Comment out following for testing on local laptop
#        - name: ZK_dataDir
#          value: "/data"
#        - name: ZK_dataLogDir
#          value: "/datalog"
# End of Comment out following for testing on local laptop
        - name: ZK_myid
          value: "1"
        - name: ZK_server_1
          value: "0.0.0.0:2888:3888"
        - name: ZK_server_2
          value: "zookeeper2-0.zoo:2888:3888"
        - name: ZK_server_3
          value: "zookeeper3-0.zoo:2888:3888"
        - name: ZK_initLimit
          value: "5"
        - name: ZK_syncLimit
          value: "2"
# following KAFKA_OPTS whitelists all zookeeper commands (conf, ruok, etc) towards port 2181 
        - name: KAFKA_OPTS
          value: "-Dzookeeper.4lw.commands.whitelist=*"
        command: ["/bin/bash", "-c"]
        args: ["start-zk.sh"]
        resources: {}
      affinity: {}
      tolerations: []
      nodeSelector: {}
# Comment out following for testing on local laptop
#      volumes:
#      - name: zookeeper-data-1
#        persistentVolumeClaim: 
#          claimName: zookeeper-data-1
#      - name: zookeeper-datalog-1
#        persistentVolumeClaim: 
#          claimName: zookeeper-datalog-1
# End of Comment out following for testing on local laptop
---
---
apiVersion: v1
kind: Service
metadata:
  name: zoo
  labels:
    app.kubernetes.io/name: zookeeper
spec:
  ports:
  - port: 2888
    name: peer
  - port: 3888
    name: leader-election
  clusterIP: None
  selector:
    app: zookeeper
---
# The service for zookeeper clients: zookeeper.[namespace]:2181
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    app.kubernetes.io/name: zookeeper
spec:
  ports:
  - port: 2181
    name: client
  selector:
    app: zookeeper
---