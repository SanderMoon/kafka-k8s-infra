---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-broker
  labels:
    app.kubernetes.io/name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-service
  template:
    metadata:
      labels:
        app: kafka
        broker: instance-0
    spec:
      terminationGracePeriodSeconds: 30
      securityContext:
        fsGroup: 1000
      containers:
      - name: kafka-broker1-con
        image: smoonemans/kafka-docker:0.0.0
        imagePullPolicy: IfNotPresent
# Comment out following for testing on local laptop
#        volumeMounts:
#        - name: kafka-data-1
#          mountPath: "/kafka" 
# End of Comment out following for testing on local laptop
        ports:
        - name: inside
          containerPort: 9092
        - name: outside
          containerPort: 9094
        - name: jmx
          containerPort: 5555
        env:
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        - name: KAFKA_ADVERTISED_LISTENERS
          value: INSIDE://:9092,OUTSIDE://:9094
        - name: KAFKA_LISTENERS
          value: INSIDE://:9092,OUTSIDE://:9094
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: INSIDE
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: KAFKA_BROKER_ID
          value: "1"
        resources: {}
      affinity: {}
      tolerations: []
      nodeSelector: {}
# Comment out following for testing on local laptop
#      volumes:
#      - name: kafka-data-1
#        persistentVolumeClaim: 
#          claimName: kafka-data-1
# End of Comment out following for testing on local laptop
---
# A headless service to create DNS records for interbroker communication: 
# [podname].broker.[namespace].svc.cluster.local:9092
---
apiVersion: v1
kind: Service
metadata:
  name: broker
  labels:
    app.kubernetes.io/name: kafka
spec:
  ports:
  - port: 9092
  # [podname].broker.kafka-test.svc.cluster.local
  clusterIP: None
  selector:
    app: kafka
---
# The bootstrap service for kafka clients: bootstrap.[namespace]:9092
---
apiVersion: v1
kind: Service
metadata:
  name: bootstrap
  labels:
    app.kubernetes.io/name: kafka
spec:
  ports:
  - port: 9092
  selector:
    app: kafka
---    